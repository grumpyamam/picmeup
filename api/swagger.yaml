---
swagger: "2.0"
info:
  description: "An API for uploading and serving images"
  version: "1.0.0"
  title: "Images API"
host: "localhost:8080"
basePath: "/v1"
schemes:
- "http"
paths:
  /images:
    get:
      summary: "Return all Image objects"
      operationId: "listImages"
      produces:
      - "application/json"
      parameters:
      - name: "page_size"
        in: "query"
        description: "Page size when pagination, if <= 0 no pagination is applied"
        required: false
        default: 0
        type: "integer"
        format: "int64"
      - name: "page_num"
        in: "query"
        description: "Page number when pagination, starting with 0"
        default: 0
        required: false
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "List of Image objects"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
      x-swagger-router-controller: "Default"
  /images/{id}:
    get:
      summary: "Return an Image object"
      operationId: "getImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Image object"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        404:
          description: "Image object not found"
      x-swagger-router-controller: "Default"
    delete:
      summary: "Delete an Image object"
      operationId: "deleteImage"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Image object"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Image object deleted"
        401:
          description: "Authentication information is missing or invalid"
          headers:
            WWW_Authenticate:
              type: "string"
        404:
          description: "Image object not found"
      security:
      - basicAuth: []
      x-swagger-router-controller: "Default"
  /upload:
    post:
      summary: "Upload an image file and create a new Image object"
      operationId: "uploadImage"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "fileName"
        in: "formData"
        description: "The image file name"
        required: false
        type: "string"
      - name: "fileData"
        in: "formData"
        description: "The Image file to upload"
        required: false
        type: "file"
      responses:
        201:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        400:
          description: "Some parameters are missing or invalid"
        401:
          description: "Authentication information is missing or invalid"
          headers:
            WWW_Authenticate:
              type: "string"
      security:
      - basicAuth: []
      x-swagger-router-controller: "Default"
  /resize/{id}:
    get:
      summary: "Return an Image object resized according to query parameters"
      operationId: "resizeImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of image object to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "width"
        in: "query"
        description: "Target width"
        required: true
        type: "integer"
        format: "int64"
      - name: "height"
        in: "query"
        description: "Target height"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        400:
          description: "Some parameters are missing or invalid"
        404:
          description: "Image object not found"
      x-swagger-router-controller: "Default"
  /scale/{id}:
    get:
      summary: "Return an Image object scaled according to query parameters"
      operationId: "scaleImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of image object to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "scale"
        in: "query"
        description: "Scale factor"
        required: true
        type: "integer"
        format: "float"
      responses:
        200:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        400:
          description: "Some parameters are missing or invalid"
        404:
          description: "Image object not found"
      x-swagger-router-controller: "Default"  
  /rotate/{id}:
    get:
      summary: "Return an Image object rotated according to query parameters"
      operationId: "rotateImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of image object to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "deg"
        in: "query"
        description: "Degree of rotation"
        required: true
        type: "integer"
        format: "float"
      responses:
        200:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        400:
          description: "Some parameters are missing or invalid"
        404:
          description: "Image object not found"
      x-swagger-router-controller: "Default"
  /greyscale/{id}:
    get:
      summary: "Return an Image object greyscaled"
      operationId: "greyscaleImage"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of image object to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Image object"
          schema:
            $ref: "#/definitions/Image"
        400:
          description: "Some parameters are missing or invalid"
        404:
          description: "Image object not found"
      x-swagger-router-controller: "Default"
securityDefinitions:
  basicAuth:
    type: "basic"
definitions:
  Image:
    type: "object"
    required:
    - "height"
    - "id"
    - "url"
    - "width"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 1
      name:
        type: "string"
        example: "image"
      width:
        type: "integer"
        format: "int64"
        example: 640
      height:
        type: "integer"
        format: "int64"
        example: 480
      url:
        type: "string"
        format: "url"
        example: "http://example.com/image-640x480.png"
responses:
  Image:
    description: "Image object"
    schema:
      $ref: "#/definitions/Image"
  ImageDeleted:
    description: "Image object deleted"
  ImageList:
    description: "List of Image objects"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/Image"
  ImageNotFoundError:
    description: "Image object not found"
  UnauthorizedError:
    description: "Authentication information is missing or invalid"
    headers:
      WWW_Authenticate:
        type: "string"
  ValidationError:
    description: "Some parameters are missing or invalid"
